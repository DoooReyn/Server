// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platcmd.proto

#ifndef PROTOBUF_platcmd_2eproto__INCLUDED
#define PROTOBUF_platcmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Cmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_platcmd_2eproto();
void protobuf_AssignDesc_platcmd_2eproto();
void protobuf_ShutdownFile_platcmd_2eproto();

class CmdZoneStateChange;
class CmdTest;
class CmdRedisTest;
class AccoutVerifyRequest;
class AccoutVerifyReturn;
class AccountRegisterRequest;
class AccountRegisterReturn;
class CmdRequest;
class ZoneList;
class ZoneListReturn;
class GateUrlNotify;
class ZoneInfoRequest;
class ZoneInfoReturn;
class ZoneLoginRequest;
class ZoneLoginReturn;
class RoleListRequest;
class RoleInfo;
class RoleListReturn;
class RoleCreateRequest;
class RoleCreateReturn;

// ===================================================================

class CmdZoneStateChange : public ::google::protobuf::Message {
 public:
  CmdZoneStateChange();
  virtual ~CmdZoneStateChange();

  CmdZoneStateChange(const CmdZoneStateChange& from);

  inline CmdZoneStateChange& operator=(const CmdZoneStateChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdZoneStateChange& default_instance();

  void Swap(CmdZoneStateChange* other);

  // implements Message ----------------------------------------------

  CmdZoneStateChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdZoneStateChange& from);
  void MergeFrom(const CmdZoneStateChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // required int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CmdZoneStateChange)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static CmdZoneStateChange* default_instance_;
};
// -------------------------------------------------------------------

class CmdTest : public ::google::protobuf::Message {
 public:
  CmdTest();
  virtual ~CmdTest();

  CmdTest(const CmdTest& from);

  inline CmdTest& operator=(const CmdTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdTest& default_instance();

  void Swap(CmdTest* other);

  // implements Message ----------------------------------------------

  CmdTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdTest& from);
  void MergeFrom(const CmdTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:Cmd.CmdTest)
 private:
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static CmdTest* default_instance_;
};
// -------------------------------------------------------------------

class CmdRedisTest : public ::google::protobuf::Message {
 public:
  CmdRedisTest();
  virtual ~CmdRedisTest();

  CmdRedisTest(const CmdRedisTest& from);

  inline CmdRedisTest& operator=(const CmdRedisTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdRedisTest& default_instance();

  void Swap(CmdRedisTest* other);

  // implements Message ----------------------------------------------

  CmdRedisTest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdRedisTest& from);
  void MergeFrom(const CmdRedisTest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // repeated .Cmd.CmdZoneStateChange list = 2;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 2;
  inline const ::Cmd::CmdZoneStateChange& list(int index) const;
  inline ::Cmd::CmdZoneStateChange* mutable_list(int index);
  inline ::Cmd::CmdZoneStateChange* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CmdZoneStateChange >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::CmdZoneStateChange >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Cmd.CmdRedisTest)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cmd::CmdZoneStateChange > list_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static CmdRedisTest* default_instance_;
};
// -------------------------------------------------------------------

class AccoutVerifyRequest : public ::google::protobuf::Message {
 public:
  AccoutVerifyRequest();
  virtual ~AccoutVerifyRequest();

  AccoutVerifyRequest(const AccoutVerifyRequest& from);

  inline AccoutVerifyRequest& operator=(const AccoutVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccoutVerifyRequest& default_instance();

  void Swap(AccoutVerifyRequest* other);

  // implements Message ----------------------------------------------

  AccoutVerifyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccoutVerifyRequest& from);
  void MergeFrom(const AccoutVerifyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::std::string& user() const;
  inline void set_user(const ::std::string& value);
  inline void set_user(const char* value);
  inline void set_user(const char* value, size_t size);
  inline ::std::string* mutable_user();
  inline ::std::string* release_user();
  inline void set_allocated_user(::std::string* user);

  // required string passwd = 2;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  inline const ::std::string& passwd() const;
  inline void set_passwd(const ::std::string& value);
  inline void set_passwd(const char* value);
  inline void set_passwd(const char* value, size_t size);
  inline ::std::string* mutable_passwd();
  inline ::std::string* release_passwd();
  inline void set_allocated_passwd(::std::string* passwd);

  // optional int64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Cmd.AccoutVerifyRequest)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_passwd();
  inline void clear_has_passwd();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_;
  ::std::string* passwd_;
  ::google::protobuf::int64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static AccoutVerifyRequest* default_instance_;
};
// -------------------------------------------------------------------

class AccoutVerifyReturn : public ::google::protobuf::Message {
 public:
  AccoutVerifyReturn();
  virtual ~AccoutVerifyReturn();

  AccoutVerifyReturn(const AccoutVerifyReturn& from);

  inline AccoutVerifyReturn& operator=(const AccoutVerifyReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccoutVerifyReturn& default_instance();

  void Swap(AccoutVerifyReturn* other);

  // implements Message ----------------------------------------------

  AccoutVerifyReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccoutVerifyReturn& from);
  void MergeFrom(const AccoutVerifyReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required string user = 2;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 2;
  inline const ::std::string& user() const;
  inline void set_user(const ::std::string& value);
  inline void set_user(const char* value);
  inline void set_user(const char* value, size_t size);
  inline ::std::string* mutable_user();
  inline ::std::string* release_user();
  inline void set_allocated_user(::std::string* user);

  // required uint32 accid = 3;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 3;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // optional int64 cid = 4;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 4;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Cmd.AccoutVerifyReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 accid_;
  ::google::protobuf::int64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static AccoutVerifyReturn* default_instance_;
};
// -------------------------------------------------------------------

class AccountRegisterRequest : public ::google::protobuf::Message {
 public:
  AccountRegisterRequest();
  virtual ~AccountRegisterRequest();

  AccountRegisterRequest(const AccountRegisterRequest& from);

  inline AccountRegisterRequest& operator=(const AccountRegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegisterRequest& default_instance();

  void Swap(AccountRegisterRequest* other);

  // implements Message ----------------------------------------------

  AccountRegisterRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountRegisterRequest& from);
  void MergeFrom(const AccountRegisterRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string user = 1;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 1;
  inline const ::std::string& user() const;
  inline void set_user(const ::std::string& value);
  inline void set_user(const char* value);
  inline void set_user(const char* value, size_t size);
  inline ::std::string* mutable_user();
  inline ::std::string* release_user();
  inline void set_allocated_user(::std::string* user);

  // required string passwd = 2;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  inline const ::std::string& passwd() const;
  inline void set_passwd(const ::std::string& value);
  inline void set_passwd(const char* value);
  inline void set_passwd(const char* value, size_t size);
  inline ::std::string* mutable_passwd();
  inline ::std::string* release_passwd();
  inline void set_allocated_passwd(::std::string* passwd);

  // optional int64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Cmd.AccountRegisterRequest)
 private:
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_passwd();
  inline void clear_has_passwd();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_;
  ::std::string* passwd_;
  ::google::protobuf::int64 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static AccountRegisterRequest* default_instance_;
};
// -------------------------------------------------------------------

class AccountRegisterReturn : public ::google::protobuf::Message {
 public:
  AccountRegisterReturn();
  virtual ~AccountRegisterReturn();

  AccountRegisterReturn(const AccountRegisterReturn& from);

  inline AccountRegisterReturn& operator=(const AccountRegisterReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegisterReturn& default_instance();

  void Swap(AccountRegisterReturn* other);

  // implements Message ----------------------------------------------

  AccountRegisterReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountRegisterReturn& from);
  void MergeFrom(const AccountRegisterReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required string user = 2;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 2;
  inline const ::std::string& user() const;
  inline void set_user(const ::std::string& value);
  inline void set_user(const char* value);
  inline void set_user(const char* value, size_t size);
  inline ::std::string* mutable_user();
  inline ::std::string* release_user();
  inline void set_allocated_user(::std::string* user);

  // optional int64 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::int64 cid() const;
  inline void set_cid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Cmd.AccountRegisterReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* user_;
  ::google::protobuf::int64 cid_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static AccountRegisterReturn* default_instance_;
};
// -------------------------------------------------------------------

class CmdRequest : public ::google::protobuf::Message {
 public:
  CmdRequest();
  virtual ~CmdRequest();

  CmdRequest(const CmdRequest& from);

  inline CmdRequest& operator=(const CmdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdRequest& default_instance();

  void Swap(CmdRequest* other);

  // implements Message ----------------------------------------------

  CmdRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdRequest& from);
  void MergeFrom(const CmdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1 [default = 0];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.CmdRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static CmdRequest* default_instance_;
};
// -------------------------------------------------------------------

class ZoneList : public ::google::protobuf::Message {
 public:
  ZoneList();
  virtual ~ZoneList();

  ZoneList(const ZoneList& from);

  inline ZoneList& operator=(const ZoneList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneList& default_instance();

  void Swap(ZoneList* other);

  // implements Message ----------------------------------------------

  ZoneList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneList& from);
  void MergeFrom(const ZoneList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.ZoneList)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 state_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static ZoneList* default_instance_;
};
// -------------------------------------------------------------------

class ZoneListReturn : public ::google::protobuf::Message {
 public:
  ZoneListReturn();
  virtual ~ZoneListReturn();

  ZoneListReturn(const ZoneListReturn& from);

  inline ZoneListReturn& operator=(const ZoneListReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneListReturn& default_instance();

  void Swap(ZoneListReturn* other);

  // implements Message ----------------------------------------------

  ZoneListReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneListReturn& from);
  void MergeFrom(const ZoneListReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.ZoneList zonelist = 1;
  inline int zonelist_size() const;
  inline void clear_zonelist();
  static const int kZonelistFieldNumber = 1;
  inline const ::Cmd::ZoneList& zonelist(int index) const;
  inline ::Cmd::ZoneList* mutable_zonelist(int index);
  inline ::Cmd::ZoneList* add_zonelist();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneList >&
      zonelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneList >*
      mutable_zonelist();

  // @@protoc_insertion_point(class_scope:Cmd.ZoneListReturn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneList > zonelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static ZoneListReturn* default_instance_;
};
// -------------------------------------------------------------------

class GateUrlNotify : public ::google::protobuf::Message {
 public:
  GateUrlNotify();
  virtual ~GateUrlNotify();

  GateUrlNotify(const GateUrlNotify& from);

  inline GateUrlNotify& operator=(const GateUrlNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GateUrlNotify& default_instance();

  void Swap(GateUrlNotify* other);

  // implements Message ----------------------------------------------

  GateUrlNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GateUrlNotify& from);
  void MergeFrom(const GateUrlNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gateid = 1;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 1;
  inline ::google::protobuf::int32 gateid() const;
  inline void set_gateid(::google::protobuf::int32 value);

  // required int32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // required string gateurl = 3;
  inline bool has_gateurl() const;
  inline void clear_gateurl();
  static const int kGateurlFieldNumber = 3;
  inline const ::std::string& gateurl() const;
  inline void set_gateurl(const ::std::string& value);
  inline void set_gateurl(const char* value);
  inline void set_gateurl(const char* value, size_t size);
  inline ::std::string* mutable_gateurl();
  inline ::std::string* release_gateurl();
  inline void set_allocated_gateurl(::std::string* gateurl);

  // @@protoc_insertion_point(class_scope:Cmd.GateUrlNotify)
 private:
  inline void set_has_gateid();
  inline void clear_has_gateid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gateurl();
  inline void clear_has_gateurl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gateid_;
  ::google::protobuf::int32 zoneid_;
  ::std::string* gateurl_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static GateUrlNotify* default_instance_;
};
// -------------------------------------------------------------------

class ZoneInfoRequest : public ::google::protobuf::Message {
 public:
  ZoneInfoRequest();
  virtual ~ZoneInfoRequest();

  ZoneInfoRequest(const ZoneInfoRequest& from);

  inline ZoneInfoRequest& operator=(const ZoneInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneInfoRequest& default_instance();

  void Swap(ZoneInfoRequest* other);

  // implements Message ----------------------------------------------

  ZoneInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneInfoRequest& from);
  void MergeFrom(const ZoneInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // required int32 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::int32 accid() const;
  inline void set_accid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ZoneInfoRequest)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::int32 accid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static ZoneInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class ZoneInfoReturn : public ::google::protobuf::Message {
 public:
  ZoneInfoReturn();
  virtual ~ZoneInfoReturn();

  ZoneInfoReturn(const ZoneInfoReturn& from);

  inline ZoneInfoReturn& operator=(const ZoneInfoReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneInfoReturn& default_instance();

  void Swap(ZoneInfoReturn* other);

  // implements Message ----------------------------------------------

  ZoneInfoReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneInfoReturn& from);
  void MergeFrom(const ZoneInfoReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string gateurl = 1;
  inline bool has_gateurl() const;
  inline void clear_gateurl();
  static const int kGateurlFieldNumber = 1;
  inline const ::std::string& gateurl() const;
  inline void set_gateurl(const ::std::string& value);
  inline void set_gateurl(const char* value);
  inline void set_gateurl(const char* value, size_t size);
  inline ::std::string* mutable_gateurl();
  inline ::std::string* release_gateurl();
  inline void set_allocated_gateurl(::std::string* gateurl);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 gateid = 3;
  inline bool has_gateid() const;
  inline void clear_gateid();
  static const int kGateidFieldNumber = 3;
  inline ::google::protobuf::uint32 gateid() const;
  inline void set_gateid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ZoneInfoReturn)
 private:
  inline void set_has_gateurl();
  inline void clear_has_gateurl();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gateid();
  inline void clear_has_gateid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* gateurl_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gateid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static ZoneInfoReturn* default_instance_;
};
// -------------------------------------------------------------------

class ZoneLoginRequest : public ::google::protobuf::Message {
 public:
  ZoneLoginRequest();
  virtual ~ZoneLoginRequest();

  ZoneLoginRequest(const ZoneLoginRequest& from);

  inline ZoneLoginRequest& operator=(const ZoneLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneLoginRequest& default_instance();

  void Swap(ZoneLoginRequest* other);

  // implements Message ----------------------------------------------

  ZoneLoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneLoginRequest& from);
  void MergeFrom(const ZoneLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // required int32 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::int32 accid() const;
  inline void set_accid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ZoneLoginRequest)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::int32 accid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static ZoneLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class ZoneLoginReturn : public ::google::protobuf::Message {
 public:
  ZoneLoginReturn();
  virtual ~ZoneLoginReturn();

  ZoneLoginReturn(const ZoneLoginReturn& from);

  inline ZoneLoginReturn& operator=(const ZoneLoginReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZoneLoginReturn& default_instance();

  void Swap(ZoneLoginReturn* other);

  // implements Message ----------------------------------------------

  ZoneLoginReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ZoneLoginReturn& from);
  void MergeFrom(const ZoneLoginReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // required int32 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::int32 accid() const;
  inline void set_accid(::google::protobuf::int32 value);

  // required int32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::int32 zoneid() const;
  inline void set_zoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cmd.ZoneLoginReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool result_;
  ::google::protobuf::int32 accid_;
  ::google::protobuf::int32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static ZoneLoginReturn* default_instance_;
};
// -------------------------------------------------------------------

class RoleListRequest : public ::google::protobuf::Message {
 public:
  RoleListRequest();
  virtual ~RoleListRequest();

  RoleListRequest(const RoleListRequest& from);

  inline RoleListRequest& operator=(const RoleListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListRequest& default_instance();

  void Swap(RoleListRequest* other);

  // implements Message ----------------------------------------------

  RoleListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListRequest& from);
  void MergeFrom(const RoleListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 accid = 1;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 1;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RoleListRequest)
 private:
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 accid_;
  ::google::protobuf::uint32 zoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static RoleListRequest* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfo : public ::google::protobuf::Message {
 public:
  RoleInfo();
  virtual ~RoleInfo();

  RoleInfo(const RoleInfo& from);

  inline RoleInfo& operator=(const RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfo& default_instance();

  void Swap(RoleInfo* other);

  // implements Message ----------------------------------------------

  RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfo& from);
  void MergeFrom(const RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 accid = 1;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 1;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // required uint32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.RoleInfo)
 private:
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 accid_;
  ::google::protobuf::uint32 roleid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleListReturn : public ::google::protobuf::Message {
 public:
  RoleListReturn();
  virtual ~RoleListReturn();

  RoleListReturn(const RoleListReturn& from);

  inline RoleListReturn& operator=(const RoleListReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListReturn& default_instance();

  void Swap(RoleListReturn* other);

  // implements Message ----------------------------------------------

  RoleListReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListReturn& from);
  void MergeFrom(const RoleListReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Cmd.RoleInfo rolelist = 1;
  inline int rolelist_size() const;
  inline void clear_rolelist();
  static const int kRolelistFieldNumber = 1;
  inline const ::Cmd::RoleInfo& rolelist(int index) const;
  inline ::Cmd::RoleInfo* mutable_rolelist(int index);
  inline ::Cmd::RoleInfo* add_rolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::Cmd::RoleInfo >&
      rolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cmd::RoleInfo >*
      mutable_rolelist();

  // @@protoc_insertion_point(class_scope:Cmd.RoleListReturn)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cmd::RoleInfo > rolelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static RoleListReturn* default_instance_;
};
// -------------------------------------------------------------------

class RoleCreateRequest : public ::google::protobuf::Message {
 public:
  RoleCreateRequest();
  virtual ~RoleCreateRequest();

  RoleCreateRequest(const RoleCreateRequest& from);

  inline RoleCreateRequest& operator=(const RoleCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateRequest& default_instance();

  void Swap(RoleCreateRequest* other);

  // implements Message ----------------------------------------------

  RoleCreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleCreateRequest& from);
  void MergeFrom(const RoleCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Cmd.RoleCreateRequest)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 accid_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static RoleCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class RoleCreateReturn : public ::google::protobuf::Message {
 public:
  RoleCreateReturn();
  virtual ~RoleCreateReturn();

  RoleCreateReturn(const RoleCreateReturn& from);

  inline RoleCreateReturn& operator=(const RoleCreateReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateReturn& default_instance();

  void Swap(RoleCreateReturn* other);

  // implements Message ----------------------------------------------

  RoleCreateReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleCreateReturn& from);
  void MergeFrom(const RoleCreateReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint32 roleid = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 accid = 5;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 5;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cmd.RoleCreateReturn)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 roleid_;
  ::std::string* name_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 accid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_platcmd_2eproto();
  friend void protobuf_AssignDesc_platcmd_2eproto();
  friend void protobuf_ShutdownFile_platcmd_2eproto();

  void InitAsDefaultInstance();
  static RoleCreateReturn* default_instance_;
};
// ===================================================================


// ===================================================================

// CmdZoneStateChange

// required int32 zoneid = 1;
inline bool CmdZoneStateChange::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdZoneStateChange::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdZoneStateChange::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdZoneStateChange::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 CmdZoneStateChange::zoneid() const {
  return zoneid_;
}
inline void CmdZoneStateChange::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required int32 state = 2;
inline bool CmdZoneStateChange::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdZoneStateChange::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdZoneStateChange::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdZoneStateChange::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CmdZoneStateChange::state() const {
  return state_;
}
inline void CmdZoneStateChange::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// CmdTest

// required string str = 1;
inline bool CmdTest::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdTest::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdTest::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdTest::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& CmdTest::str() const {
  return *str_;
}
inline void CmdTest::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CmdTest::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CmdTest::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CmdTest::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* CmdTest::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CmdTest::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CmdRedisTest

// required int32 count = 1;
inline bool CmdRedisTest::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdRedisTest::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdRedisTest::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdRedisTest::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CmdRedisTest::count() const {
  return count_;
}
inline void CmdRedisTest::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated .Cmd.CmdZoneStateChange list = 2;
inline int CmdRedisTest::list_size() const {
  return list_.size();
}
inline void CmdRedisTest::clear_list() {
  list_.Clear();
}
inline const ::Cmd::CmdZoneStateChange& CmdRedisTest::list(int index) const {
  return list_.Get(index);
}
inline ::Cmd::CmdZoneStateChange* CmdRedisTest::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::Cmd::CmdZoneStateChange* CmdRedisTest::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::CmdZoneStateChange >&
CmdRedisTest::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::CmdZoneStateChange >*
CmdRedisTest::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// AccoutVerifyRequest

// required string user = 1;
inline bool AccoutVerifyRequest::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccoutVerifyRequest::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccoutVerifyRequest::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccoutVerifyRequest::clear_user() {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    user_->clear();
  }
  clear_has_user();
}
inline const ::std::string& AccoutVerifyRequest::user() const {
  return *user_;
}
inline void AccoutVerifyRequest::set_user(const ::std::string& value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccoutVerifyRequest::set_user(const char* value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccoutVerifyRequest::set_user(const char* value, size_t size) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccoutVerifyRequest::mutable_user() {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  return user_;
}
inline ::std::string* AccoutVerifyRequest::release_user() {
  clear_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_;
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccoutVerifyRequest::set_allocated_user(::std::string* user) {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    delete user_;
  }
  if (user) {
    set_has_user();
    user_ = user;
  } else {
    clear_has_user();
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string passwd = 2;
inline bool AccoutVerifyRequest::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccoutVerifyRequest::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccoutVerifyRequest::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccoutVerifyRequest::clear_passwd() {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    passwd_->clear();
  }
  clear_has_passwd();
}
inline const ::std::string& AccoutVerifyRequest::passwd() const {
  return *passwd_;
}
inline void AccoutVerifyRequest::set_passwd(const ::std::string& value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void AccoutVerifyRequest::set_passwd(const char* value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void AccoutVerifyRequest::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccoutVerifyRequest::mutable_passwd() {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  return passwd_;
}
inline ::std::string* AccoutVerifyRequest::release_passwd() {
  clear_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = passwd_;
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccoutVerifyRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    delete passwd_;
  }
  if (passwd) {
    set_has_passwd();
    passwd_ = passwd;
  } else {
    clear_has_passwd();
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 cid = 3;
inline bool AccoutVerifyRequest::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccoutVerifyRequest::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccoutVerifyRequest::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccoutVerifyRequest::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 AccoutVerifyRequest::cid() const {
  return cid_;
}
inline void AccoutVerifyRequest::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// AccoutVerifyReturn

// required uint32 result = 1;
inline bool AccoutVerifyReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccoutVerifyReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccoutVerifyReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccoutVerifyReturn::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 AccoutVerifyReturn::result() const {
  return result_;
}
inline void AccoutVerifyReturn::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required string user = 2;
inline bool AccoutVerifyReturn::has_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccoutVerifyReturn::set_has_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccoutVerifyReturn::clear_has_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccoutVerifyReturn::clear_user() {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    user_->clear();
  }
  clear_has_user();
}
inline const ::std::string& AccoutVerifyReturn::user() const {
  return *user_;
}
inline void AccoutVerifyReturn::set_user(const ::std::string& value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccoutVerifyReturn::set_user(const char* value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccoutVerifyReturn::set_user(const char* value, size_t size) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccoutVerifyReturn::mutable_user() {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  return user_;
}
inline ::std::string* AccoutVerifyReturn::release_user() {
  clear_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_;
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccoutVerifyReturn::set_allocated_user(::std::string* user) {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    delete user_;
  }
  if (user) {
    set_has_user();
    user_ = user;
  } else {
    clear_has_user();
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 accid = 3;
inline bool AccoutVerifyReturn::has_accid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccoutVerifyReturn::set_has_accid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccoutVerifyReturn::clear_has_accid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccoutVerifyReturn::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 AccoutVerifyReturn::accid() const {
  return accid_;
}
inline void AccoutVerifyReturn::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
}

// optional int64 cid = 4;
inline bool AccoutVerifyReturn::has_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccoutVerifyReturn::set_has_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccoutVerifyReturn::clear_has_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccoutVerifyReturn::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 AccoutVerifyReturn::cid() const {
  return cid_;
}
inline void AccoutVerifyReturn::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// AccountRegisterRequest

// required string user = 1;
inline bool AccountRegisterRequest::has_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountRegisterRequest::set_has_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountRegisterRequest::clear_has_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountRegisterRequest::clear_user() {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    user_->clear();
  }
  clear_has_user();
}
inline const ::std::string& AccountRegisterRequest::user() const {
  return *user_;
}
inline void AccountRegisterRequest::set_user(const ::std::string& value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccountRegisterRequest::set_user(const char* value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccountRegisterRequest::set_user(const char* value, size_t size) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccountRegisterRequest::mutable_user() {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  return user_;
}
inline ::std::string* AccountRegisterRequest::release_user() {
  clear_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_;
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccountRegisterRequest::set_allocated_user(::std::string* user) {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    delete user_;
  }
  if (user) {
    set_has_user();
    user_ = user;
  } else {
    clear_has_user();
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string passwd = 2;
inline bool AccountRegisterRequest::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountRegisterRequest::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountRegisterRequest::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountRegisterRequest::clear_passwd() {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    passwd_->clear();
  }
  clear_has_passwd();
}
inline const ::std::string& AccountRegisterRequest::passwd() const {
  return *passwd_;
}
inline void AccountRegisterRequest::set_passwd(const ::std::string& value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void AccountRegisterRequest::set_passwd(const char* value) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(value);
}
inline void AccountRegisterRequest::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  passwd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccountRegisterRequest::mutable_passwd() {
  set_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    passwd_ = new ::std::string;
  }
  return passwd_;
}
inline ::std::string* AccountRegisterRequest::release_passwd() {
  clear_has_passwd();
  if (passwd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = passwd_;
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccountRegisterRequest::set_allocated_passwd(::std::string* passwd) {
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    delete passwd_;
  }
  if (passwd) {
    set_has_passwd();
    passwd_ = passwd;
  } else {
    clear_has_passwd();
    passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 cid = 3;
inline bool AccountRegisterRequest::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountRegisterRequest::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountRegisterRequest::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountRegisterRequest::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 AccountRegisterRequest::cid() const {
  return cid_;
}
inline void AccountRegisterRequest::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// AccountRegisterReturn

// required uint32 result = 1;
inline bool AccountRegisterReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountRegisterReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountRegisterReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountRegisterReturn::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 AccountRegisterReturn::result() const {
  return result_;
}
inline void AccountRegisterReturn::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required string user = 2;
inline bool AccountRegisterReturn::has_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountRegisterReturn::set_has_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountRegisterReturn::clear_has_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountRegisterReturn::clear_user() {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    user_->clear();
  }
  clear_has_user();
}
inline const ::std::string& AccountRegisterReturn::user() const {
  return *user_;
}
inline void AccountRegisterReturn::set_user(const ::std::string& value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccountRegisterReturn::set_user(const char* value) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(value);
}
inline void AccountRegisterReturn::set_user(const char* value, size_t size) {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  user_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccountRegisterReturn::mutable_user() {
  set_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    user_ = new ::std::string;
  }
  return user_;
}
inline ::std::string* AccountRegisterReturn::release_user() {
  clear_has_user();
  if (user_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_;
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccountRegisterReturn::set_allocated_user(::std::string* user) {
  if (user_ != &::google::protobuf::internal::kEmptyString) {
    delete user_;
  }
  if (user) {
    set_has_user();
    user_ = user;
  } else {
    clear_has_user();
    user_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 cid = 3;
inline bool AccountRegisterReturn::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountRegisterReturn::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountRegisterReturn::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountRegisterReturn::clear_cid() {
  cid_ = GOOGLE_LONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::int64 AccountRegisterReturn::cid() const {
  return cid_;
}
inline void AccountRegisterReturn::set_cid(::google::protobuf::int64 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// CmdRequest

// required uint32 id = 1 [default = 0];
inline bool CmdRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdRequest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CmdRequest::id() const {
  return id_;
}
inline void CmdRequest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ZoneList

// required uint32 zoneid = 1;
inline bool ZoneList::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneList::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneList::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneList::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ZoneList::zoneid() const {
  return zoneid_;
}
inline void ZoneList::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required uint32 state = 2;
inline bool ZoneList::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneList::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneList::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneList::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 ZoneList::state() const {
  return state_;
}
inline void ZoneList::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// required string name = 3;
inline bool ZoneList::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZoneList::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZoneList::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZoneList::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ZoneList::name() const {
  return *name_;
}
inline void ZoneList::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ZoneList::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ZoneList::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ZoneList::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ZoneList::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ZoneList::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ZoneListReturn

// repeated .Cmd.ZoneList zonelist = 1;
inline int ZoneListReturn::zonelist_size() const {
  return zonelist_.size();
}
inline void ZoneListReturn::clear_zonelist() {
  zonelist_.Clear();
}
inline const ::Cmd::ZoneList& ZoneListReturn::zonelist(int index) const {
  return zonelist_.Get(index);
}
inline ::Cmd::ZoneList* ZoneListReturn::mutable_zonelist(int index) {
  return zonelist_.Mutable(index);
}
inline ::Cmd::ZoneList* ZoneListReturn::add_zonelist() {
  return zonelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneList >&
ZoneListReturn::zonelist() const {
  return zonelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::ZoneList >*
ZoneListReturn::mutable_zonelist() {
  return &zonelist_;
}

// -------------------------------------------------------------------

// GateUrlNotify

// required int32 gateid = 1;
inline bool GateUrlNotify::has_gateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GateUrlNotify::set_has_gateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GateUrlNotify::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GateUrlNotify::clear_gateid() {
  gateid_ = 0;
  clear_has_gateid();
}
inline ::google::protobuf::int32 GateUrlNotify::gateid() const {
  return gateid_;
}
inline void GateUrlNotify::set_gateid(::google::protobuf::int32 value) {
  set_has_gateid();
  gateid_ = value;
}

// required int32 zoneid = 2;
inline bool GateUrlNotify::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GateUrlNotify::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GateUrlNotify::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GateUrlNotify::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 GateUrlNotify::zoneid() const {
  return zoneid_;
}
inline void GateUrlNotify::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required string gateurl = 3;
inline bool GateUrlNotify::has_gateurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GateUrlNotify::set_has_gateurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GateUrlNotify::clear_has_gateurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GateUrlNotify::clear_gateurl() {
  if (gateurl_ != &::google::protobuf::internal::kEmptyString) {
    gateurl_->clear();
  }
  clear_has_gateurl();
}
inline const ::std::string& GateUrlNotify::gateurl() const {
  return *gateurl_;
}
inline void GateUrlNotify::set_gateurl(const ::std::string& value) {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  gateurl_->assign(value);
}
inline void GateUrlNotify::set_gateurl(const char* value) {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  gateurl_->assign(value);
}
inline void GateUrlNotify::set_gateurl(const char* value, size_t size) {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  gateurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GateUrlNotify::mutable_gateurl() {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  return gateurl_;
}
inline ::std::string* GateUrlNotify::release_gateurl() {
  clear_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gateurl_;
    gateurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GateUrlNotify::set_allocated_gateurl(::std::string* gateurl) {
  if (gateurl_ != &::google::protobuf::internal::kEmptyString) {
    delete gateurl_;
  }
  if (gateurl) {
    set_has_gateurl();
    gateurl_ = gateurl;
  } else {
    clear_has_gateurl();
    gateurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ZoneInfoRequest

// required int32 zoneid = 1;
inline bool ZoneInfoRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneInfoRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneInfoRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneInfoRequest::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 ZoneInfoRequest::zoneid() const {
  return zoneid_;
}
inline void ZoneInfoRequest::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required int32 accid = 2;
inline bool ZoneInfoRequest::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneInfoRequest::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneInfoRequest::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneInfoRequest::clear_accid() {
  accid_ = 0;
  clear_has_accid();
}
inline ::google::protobuf::int32 ZoneInfoRequest::accid() const {
  return accid_;
}
inline void ZoneInfoRequest::set_accid(::google::protobuf::int32 value) {
  set_has_accid();
  accid_ = value;
}

// -------------------------------------------------------------------

// ZoneInfoReturn

// required string gateurl = 1;
inline bool ZoneInfoReturn::has_gateurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneInfoReturn::set_has_gateurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneInfoReturn::clear_has_gateurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneInfoReturn::clear_gateurl() {
  if (gateurl_ != &::google::protobuf::internal::kEmptyString) {
    gateurl_->clear();
  }
  clear_has_gateurl();
}
inline const ::std::string& ZoneInfoReturn::gateurl() const {
  return *gateurl_;
}
inline void ZoneInfoReturn::set_gateurl(const ::std::string& value) {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  gateurl_->assign(value);
}
inline void ZoneInfoReturn::set_gateurl(const char* value) {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  gateurl_->assign(value);
}
inline void ZoneInfoReturn::set_gateurl(const char* value, size_t size) {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  gateurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ZoneInfoReturn::mutable_gateurl() {
  set_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    gateurl_ = new ::std::string;
  }
  return gateurl_;
}
inline ::std::string* ZoneInfoReturn::release_gateurl() {
  clear_has_gateurl();
  if (gateurl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gateurl_;
    gateurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ZoneInfoReturn::set_allocated_gateurl(::std::string* gateurl) {
  if (gateurl_ != &::google::protobuf::internal::kEmptyString) {
    delete gateurl_;
  }
  if (gateurl) {
    set_has_gateurl();
    gateurl_ = gateurl;
  } else {
    clear_has_gateurl();
    gateurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 zoneid = 2;
inline bool ZoneInfoReturn::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneInfoReturn::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneInfoReturn::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneInfoReturn::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ZoneInfoReturn::zoneid() const {
  return zoneid_;
}
inline void ZoneInfoReturn::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required uint32 gateid = 3;
inline bool ZoneInfoReturn::has_gateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZoneInfoReturn::set_has_gateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZoneInfoReturn::clear_has_gateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZoneInfoReturn::clear_gateid() {
  gateid_ = 0u;
  clear_has_gateid();
}
inline ::google::protobuf::uint32 ZoneInfoReturn::gateid() const {
  return gateid_;
}
inline void ZoneInfoReturn::set_gateid(::google::protobuf::uint32 value) {
  set_has_gateid();
  gateid_ = value;
}

// -------------------------------------------------------------------

// ZoneLoginRequest

// required int32 zoneid = 1;
inline bool ZoneLoginRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneLoginRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneLoginRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneLoginRequest::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 ZoneLoginRequest::zoneid() const {
  return zoneid_;
}
inline void ZoneLoginRequest::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required int32 accid = 2;
inline bool ZoneLoginRequest::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneLoginRequest::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneLoginRequest::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneLoginRequest::clear_accid() {
  accid_ = 0;
  clear_has_accid();
}
inline ::google::protobuf::int32 ZoneLoginRequest::accid() const {
  return accid_;
}
inline void ZoneLoginRequest::set_accid(::google::protobuf::int32 value) {
  set_has_accid();
  accid_ = value;
}

// -------------------------------------------------------------------

// ZoneLoginReturn

// required bool result = 1;
inline bool ZoneLoginReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ZoneLoginReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ZoneLoginReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ZoneLoginReturn::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool ZoneLoginReturn::result() const {
  return result_;
}
inline void ZoneLoginReturn::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// required int32 accid = 2;
inline bool ZoneLoginReturn::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ZoneLoginReturn::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ZoneLoginReturn::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ZoneLoginReturn::clear_accid() {
  accid_ = 0;
  clear_has_accid();
}
inline ::google::protobuf::int32 ZoneLoginReturn::accid() const {
  return accid_;
}
inline void ZoneLoginReturn::set_accid(::google::protobuf::int32 value) {
  set_has_accid();
  accid_ = value;
}

// required int32 zoneid = 3;
inline bool ZoneLoginReturn::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ZoneLoginReturn::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ZoneLoginReturn::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ZoneLoginReturn::clear_zoneid() {
  zoneid_ = 0;
  clear_has_zoneid();
}
inline ::google::protobuf::int32 ZoneLoginReturn::zoneid() const {
  return zoneid_;
}
inline void ZoneLoginReturn::set_zoneid(::google::protobuf::int32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// RoleListRequest

// required uint32 accid = 1;
inline bool RoleListRequest::has_accid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListRequest::set_has_accid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListRequest::clear_has_accid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListRequest::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 RoleListRequest::accid() const {
  return accid_;
}
inline void RoleListRequest::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
}

// required uint32 zoneid = 2;
inline bool RoleListRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleListRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleListRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleListRequest::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RoleListRequest::zoneid() const {
  return zoneid_;
}
inline void RoleListRequest::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// -------------------------------------------------------------------

// RoleInfo

// required uint32 accid = 1;
inline bool RoleInfo::has_accid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfo::set_has_accid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfo::clear_has_accid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfo::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 RoleInfo::accid() const {
  return accid_;
}
inline void RoleInfo::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
}

// required uint32 roleid = 2;
inline bool RoleInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfo::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 RoleInfo::roleid() const {
  return roleid_;
}
inline void RoleInfo::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string name = 3;
inline bool RoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleInfo::name() const {
  return *name_;
}
inline void RoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RoleListReturn

// repeated .Cmd.RoleInfo rolelist = 1;
inline int RoleListReturn::rolelist_size() const {
  return rolelist_.size();
}
inline void RoleListReturn::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::Cmd::RoleInfo& RoleListReturn::rolelist(int index) const {
  return rolelist_.Get(index);
}
inline ::Cmd::RoleInfo* RoleListReturn::mutable_rolelist(int index) {
  return rolelist_.Mutable(index);
}
inline ::Cmd::RoleInfo* RoleListReturn::add_rolelist() {
  return rolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cmd::RoleInfo >&
RoleListReturn::rolelist() const {
  return rolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cmd::RoleInfo >*
RoleListReturn::mutable_rolelist() {
  return &rolelist_;
}

// -------------------------------------------------------------------

// RoleCreateRequest

// required uint32 zoneid = 1;
inline bool RoleCreateRequest::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleCreateRequest::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleCreateRequest::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleCreateRequest::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RoleCreateRequest::zoneid() const {
  return zoneid_;
}
inline void RoleCreateRequest::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required uint32 accid = 2;
inline bool RoleCreateRequest::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleCreateRequest::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleCreateRequest::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleCreateRequest::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 RoleCreateRequest::accid() const {
  return accid_;
}
inline void RoleCreateRequest::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
}

// required string name = 3;
inline bool RoleCreateRequest::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleCreateRequest::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleCreateRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleCreateRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleCreateRequest::name() const {
  return *name_;
}
inline void RoleCreateRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleCreateRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleCreateRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleCreateRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleCreateRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleCreateRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RoleCreateReturn

// required uint32 result = 1;
inline bool RoleCreateReturn::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleCreateReturn::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleCreateReturn::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleCreateReturn::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 RoleCreateReturn::result() const {
  return result_;
}
inline void RoleCreateReturn::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint32 roleid = 2;
inline bool RoleCreateReturn::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleCreateReturn::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleCreateReturn::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleCreateReturn::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 RoleCreateReturn::roleid() const {
  return roleid_;
}
inline void RoleCreateReturn::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string name = 3;
inline bool RoleCreateReturn::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleCreateReturn::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleCreateReturn::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleCreateReturn::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleCreateReturn::name() const {
  return *name_;
}
inline void RoleCreateReturn::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleCreateReturn::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleCreateReturn::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleCreateReturn::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleCreateReturn::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleCreateReturn::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 zoneid = 4;
inline bool RoleCreateReturn::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleCreateReturn::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleCreateReturn::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleCreateReturn::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RoleCreateReturn::zoneid() const {
  return zoneid_;
}
inline void RoleCreateReturn::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
}

// required uint32 accid = 5;
inline bool RoleCreateReturn::has_accid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleCreateReturn::set_has_accid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleCreateReturn::clear_has_accid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleCreateReturn::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 RoleCreateReturn::accid() const {
  return accid_;
}
inline void RoleCreateReturn::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cmd

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_platcmd_2eproto__INCLUDED
